// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "nooneUsers",
    columns: [
      { name: "email", type: "text" },
      { name: "password", type: "text" },
    ],
  },
  { name: "admin", columns: [{ name: "password", type: "text" }] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type NooneUsers = InferredTypes["nooneUsers"];
export type NooneUsersRecord = NooneUsers & XataRecord;

export type Admin = InferredTypes["admin"];
export type AdminRecord = Admin & XataRecord;

export type DatabaseSchema = {
  nooneUsers: NooneUsersRecord;
  admin: AdminRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://King-cobra-s-workspace-eodsia.eu-central-1.xata.sh/db/p1wise",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
